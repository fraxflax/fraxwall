# $Id: fraxwall.rules,v 1.22 2009-12-11 12:16:16 root Exp $
#
# SYNTAX
# ------
#
# include = /path/file 
#
# includes file just as if where written here
#
#
# iptables = <string>
#
# specifys a custom iptables command, everything after '=' is passed as arguments to iptables
# Only use this parameter if you really know of what you are doing (and is named frax ;-)
#
#
# [DEFINE]
#   <keyword> = <string>
#
# everywhere <keyword> appear as a value (except for NAME, INCLUDE & IPTABLES)
# it is replaced with the text <string>.
# <string> may include separators (like ';' & ',') and other defines.
#
# OBSERVE that definitions must be defined before they are used.
# 
#
# [<out-interface>]
#   NAME = <string>
#
#   ACCEPT =	<in-interface> ; <source-addr> ; <dest-addr> ; <protocol> ; <dest-port> [ ; insert|append [ ; <chain> ] ]
#   REJECT =	<in-interface> ; <source-addr> ; <dest-addr> ; <protocol> ; <dest-port> [ ; insert|append [ ; <chain> ] ]
#   DROP =	<in-interface> ; <source-addr> ; <dest-addr> ; <protocol> ; <dest-port> [ ; insert|append [ ; <chain> ] ]
#
#   NAT =	<snat-addr>    ; <source-addr> ; <dest-addr> ; <protocol> ; <dest-port> [ ; insert ]
#
#
# Keyword "ALL" can be used for interfaces, addresses, protocols & ports. 
# OBSERVE rules with ALL as <in-interface> is always executed before specific
# interface <-> interface rules, be carefule when using REJECT and/or DROP 
# with ALL as <in-interface>!
#
# To be able to do bridging firewalls the actual (in-/out-)interface can be
# prepended with 'phy=', e.g. whould phy=eth0 as in-interface match
# "--physdev-in eth0" rather than "--in-interface eth0".
# 
# You can also specify groups of interfaces, addresses, protocols &
# ports by specifing a comma-spearated list.
# 
# Use \<NL> for wrapping lines.  Everything after a '#' on a line is
# considered a comment. You may comment wrapped lines.
# Lines with only whitespaces are ignored.
# 
#
# NAT sets up snat or masquerading for the specified sources and
# destination.  Observe that it does NOT automatically setup netfiler
# (FORWARD) ACCEPT rules to the specified destination(s), so you can safely
# use ALL for dest-addr, protocol and dest-port, controlling the
# access with ACCEPT, REJECT and DROP instead.  
# If you specify ALL as <snat-addr> target MASQUERADE will be used
# instead of SNAT.
#
# The special interface '_FW_' means all interfaces on the firewall itself.
# When used as in-interface it will affect the OUTPUT chain, and when used
# as out-interface it will affect the INPUT chain. 
# It will NEVER affect the FORWARD chain.
#
# ORDER does matter, rules are appended (or inserted specified) in the
# order they appear. This is exactly how it works:
# The first time a <out-interface>,<in-interface> rule appears a chain for that
# interface combination is created. A rule for jumping to the that chain is
# appended, or inserted in case ALL is <in-interface>, to the
# appropiate default chain. All rules that have that exact combination of
# <out-interface>,<in-interface> will then be appended (or inserted if specified)
# to that chain. 
# If a <chain> is specified the rules are appended (inserted) to 
# <chain> instead. If it is the first time <chain> is used the chain
# named <chain> is created and jumped to according to the
# <in-interface>,<out-interface> combination in that rule.
# 
# 
# [PROXY]
#   PROXY =	<in-interface> ; <source-addr> ; <dest-addr> ; <protocol> ; <dest-port> ; \
#		<proxy-addr> ; <proxy-port> [ ; insert ]
#   DIRECT =	<in-interface> ; <source-addr> ; <dest-addr> ; <protocol> ; <dest-port> [ ; append ]
# 
# The PROXY parameter setup netfilter rules allowing sources from the
# in-interface access to the proxy server, and also nat rules for
# redirecting the traffic (transparent proxy).
# 
# Observe that this allows the source-addr full access to the proxy
# server on proxy-port, alowing the source-addr to bypass netfilter
# security for the protocols the proxy server supports.
# You will also have to set up the appropiate restrictions in the 
# proxy server's config.
# 
# If proxy-addr is 127.0.0.1, localhost or ALL, REDIRECT target is
# used, otherwise DNAT ...  thus, do not specify the address of one of
# the firewalls interfaces if you have the proxy on the firewall
# itself, use localhost or ALL instead.
#
# The DIRECT parameter overrides the PROXY parameter allowing direct
# (possibly NAT:ed) access to or from certain hosts if including the
# same ports as the PROXY parameter.
# Observe that DIRECT does NOT automatically setup netfiler
# (FORWARD) ACCEPT rules to the specified destination(s). You will have to
# do this using ACCEPT parameters for the appropiate interfaces.
# 

[DEFINE]
  ITUN =	tun+

  IMGM =	eth1
  AMGMBC =	10.118.7.255
  NMGM =	10.116.0.0/14

  IBR =		br0
  NBR =		172.21.0.0/16
  ABRBC =	172.21.255.255

  IGUEST =	phy=vif+
  IEXT =	phy=eth0
  AGUEST =	88.151.47.92

  # Networks / Addresses
  NLOOP =	127.0.0.0/8
  NPRIV =	10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
  NMCST =	224.0.0.0/4
  ABCST =	255.255.255.255,NMCST,ABRBC



  # Services
  icmp_allow =  echo-request, \
		destination-unreachable, \
		source-quench, \
		redirect, \
		time-exceeded, \
		parameter-problem



### Protect xen server and prohibit mgm <-> ext routing

[IBR]
  NDROP = IEXT	; ALL	; ABCST	; ALL	; ALL	# Silently drop broad-/multi-casts on bridge

[IBR]
  NAME = br
  REJECT = _FW_	; ALL	; ALL	; ALL	; ALL		# No xen -> ext (reject instead of drop)
  REJECT = IMGM	; ALL	; ALL	; ALL	; ALL		# No mgm -> ext routing (reject instead of drop)

[IMGM]
  NAME = mgm
  ACCEPT = _FW_	; ALL	; ALL	; ALL	; ALL		# xen -> all, via mgm, ok

[_FW_]
  ACCEPT = lo	; ALL	; ALL	; ALL	; ALL		# xen loopback, ok
  ACCEPT = IMGM	; NMGM	; ALL	; icmp	; icmp_allow	# mgm icmp
  ACCEPT = IMGM	; NMGM	; ALL	; tcp	; ssh		# mgm access
  NDROP =  IMGM	; ALL	; ABCST	; ALL	; ALL		# Silently drop broad-/multi-casts on mgm


[lo]
  ACCEPT = _FW_	; ALL	; ALL	; ALL	; ALL		# xen loopback, ok

### Setup Guest Access Rights
[IEXT]
  NAME=ext
  ACCEPT = IGUEST ; AGUEST ; ALL ; ALL	; ALL	# full outbound access
						# CHANGE THIS!

[IGUEST]
  NAME = guest
  ACCEPT = IEXT ; ALL	; AGUEST ; icmp		; icmp_allow	# ping me senseless
# ACCEPT = IEXT ; ALL	; AGUEST ; tcp		; 42224		# allow ssh on odd port only
  ACCEPT = IEXT ; ALL	; AGUEST ; tcp		; ssh		# allow ssh
  ACCEPT = IEXT ; ALL	; AGUEST ; tcp		; imaps		# allow imaps
  ACCEPT = IEXT ; ALL	; AGUEST ; tcp		; http		# allow http
  ACCEPT = IEXT ; ALL	; AGUEST ; tcp		; https		# allow https
  ACCEPT = IEXT ; ALL	; AGUEST ; tcp		; smtp		# allow https
  ACCEPT = IEXT ; ALL	; AGUEST ; udp,tcp	; domain	# allow DNS
  NDROP =  IEXT ; ALL	; ABCST  ; ALL		; ALL		# Silently drop broad-/multi-casts on mgm

# DNAT 26 -> 25 (smtp on port 26 as well) for guest
[PROXY]
  PROXY =  IEXT ; ALL	; AGUEST ; tcp	; 26 ; AGUEST ; 25
